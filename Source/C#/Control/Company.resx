<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="_saltImage.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>